{"version":3,"sources":["types/types.js","reducers/CounterReducer.js","components/Counter.jsx","components/UseContext.js","reducers/authReducer.js","components/Longin.jsx","actions/authAction.js","routers/AuthRouter.js","components/Navbar.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","index.js"],"names":["types","init","value","parseInt","CounterReducer","state","action","type","Counter","useReducer","counter","dispatch","className","onClick","UserContext","createContext","initialState","auth","authReducer","uid","payload","name","displayName","Longin","useContext","isAuth","setIsAuth","console","log","params","AuthRouter","exact","path","component","to","Navbar","class","id","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","useState","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2601584f.chunk.js","sourcesContent":["export const types={\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    increment: '[Counter] increment counter',\r\n    decrement: '[Counter] decrement counter',\r\n    reset: '[Counter] reset counter'\r\n}","import {types} from '../types/types'\r\n\r\nexport const initialState = 100\r\n\r\nexport const init = (value)=>{\r\n    return parseInt(value)\r\n}\r\n\r\nexport const CounterReducer = (state,action) => {\r\n\r\n   switch (action.type) {\r\n       case types.increment:\r\n           return state + 1\r\n\r\n        case types.decrement:\r\n            return state - 1\r\n\r\n        case types.reset:\r\n            return init(initialState)\r\n        \r\n       default:\r\n           return state\r\n   }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { CounterReducer, initialState, init} from '../reducers/CounterReducer'\r\nimport {types} from '../types/types'\r\n\r\nconst Counter = () => {\r\n    \r\n   const [counter, dispatch] = useReducer(CounterReducer, initialState, init)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-3\">\r\n            <h1>Counter: {counter} </h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={()=>{\r\n                    dispatch({type: types.increment})\r\n                }}\r\n            >\r\n                +1\r\n            </button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter\r\n","import {createContext} from 'react'\r\n\r\n\r\nexport const UserContext = createContext(null)","import { types } from \"../types/types\";\r\n\r\nexport const initialState ={\r\n    auth:{}\r\n}\r\n\r\nexport const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name:  action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useContext, useReducer } from 'react'\r\nimport { authReducer, initialState } from '../reducers/authReducer'\r\nimport {login,logout} from '../actions/authAction'\r\nimport { UserContext } from './UseContext'\r\n\r\nconst Longin = () => {\r\n\r\n    const {isAuth,setIsAuth} = useContext(UserContext)\r\n\r\n    const [state, dispatch] = useReducer(authReducer, initialState)\r\n\r\n    const handleLogin = (params) => {\r\n        dispatch(login('123','Silvia Garc√≠a'))\r\n        setIsAuth(true)\r\n    }\r\n    \r\n\r\n    console.log(state)\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <hr />\r\n            <p>\r\n            {state.name}\r\n            {state.uid}\r\n            </p>\r\n            <br />\r\n            <p>{isAuth}</p>\r\n            <button \r\n                className=\"btn btn-primary\" \r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n            <button \r\n                className=\"btn btn-danger\" \r\n            >\r\n                Logout\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Longin\r\n","import { types } from '../types/types'\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n})\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\nimport Longin from '../components/Longin'\r\n\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\"  component={Longin}/>\r\n \r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRouter\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from './UseContext'\r\nconst Navbar = () => {\r\n    const { setIsAuth } = useContext(UserContext)\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div class=\"container-fluid\">\r\n                <Link class=\"navbar-brand\" to=\"/\">useReducer</Link>\r\n\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                    <div class=\"navbar-nav\">\r\n                        <Link class=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        <Link class=\"nav-link\" to=\"/auth/login\">Login</Link>\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-flex\">\r\n                    <button \r\n                        class=\"btn btn-outline-success\"\r\n                        type=\"submit\"\r\n                        onClick={()=>setIsAuth(false)}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )//true\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated ) //false\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext, useState } from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nimport Counter from '../components/Counter';\r\nimport { UserContext } from '../components/UseContext';\r\nimport AuthRouter from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nconst AppRouter = () => {\r\n\r\n\r\n\r\n    const [isAuth, setIsAuth] = useState(false)\r\n\r\n    return (\r\n        <UserContext.Provider value={{ isAuth, setIsAuth }}>\r\n            <Router>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated={isAuth}\r\n                    />\r\n                    <PrivateRoute\r\n                        path=\"/\"\r\n                        component={Counter}\r\n                        isAuthenticated={isAuth}\r\n                    />\r\n                </Switch>\r\n            </Router>\r\n        </UserContext.Provider >\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\nimport AppRouter from './routers/AppRouter';\n\nReactDOM.render(\n  <React.StrictMode>\n   <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}